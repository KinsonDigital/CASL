name: Perform Pre-Release

on:
  workflow_dispatch:
  push:
    branches: [ release/v* ]
  pull_request:
    types: [ synchronize ]
    branches: [ release/v* ]

jobs:
  Perform_Pre_Release:
    env:
      PROJECT_NAME: CASL

    name: Perform Pre-Release
    runs-on: windows-latest

    steps:
    - name: Display Info
      run: |
        echo "WorkSpace Path => ${{ github.workspace }}"

    - uses: actions/checkout@v2

    - name: Setup .NET 5.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore Dependencies
      run: dotnet restore "${{ github.workspace }}\${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj"

    - name: Build
      run: dotnet build "${{ github.workspace }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj" --no-restore

    - name: Execute Unit Tests
      run: dotnet test "${{ github.workspace }}/Testing/${{ env.PROJECT_NAME }}Tests/${{ env.PROJECT_NAME }}Tests.csproj" -c Debug --collect:"XPlat Code Coverage"

    - name: Publish Code Coverage
      uses: codecov/codecov-action@v1.5.2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ${{ github.workspace }}/Testing/${{ env.PROJECT_NAME }}Tests/TestResults/**/coverage.cobertura.xml

    - name: Publish Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        name: CASL
        path: ${{ github.workspace }}/${{ env.PROJECT_NAME }}/bin/Debug/net5.0
        error: There was an issue uploading the build artifact

    - name: Setup Nuget
      uses: NuGet/setup-nuget@v1.0.5

    - name: Create Nuget Package
      run: dotnet pack "${{ github.workspace }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj" -o "${{ github.workspace }}" -c Debug

    - name: Get Version From Project File
      id: get-version
      uses: KinsonDigital/vget@v0.2
      with:
        repo-owner-and-name: '${{ github.repository }}'
        branch: '${{ github.ref }}'
        relative-file-path: '${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj'
        user-name: 'kinsondigital@gmail.com'
        password: ${{ secrets.REPO_PASSWORD }}
    
    - name: Publish Nuget Package
      run: dotnet nuget push "${{ github.workspace }}/KinsonDigital.${{ env.PROJECT_NAME }}.${{ steps.get-version.outputs.version }}.nupkg" --api-key ${{ secrets.NUGET_ORG_API_KEY }} --source https://api.nuget.org/v3/index.json
