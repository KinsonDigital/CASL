name: QA Release

env:
  PROJECT_NAME: CASL
  BUILD_CONFIG: Debug
  RELEASE_NAME: QA
  NET_SDK_VERSION: 5.0.x # Changing this means changing ARTIFACT_FOLDER_NAME
  ARTIFACT_FOLDER_NAME: '5.0' # Changing this means changing NET_SDK_VERSION

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
    paths-ignore:
      - ".github/**"
      - 'Documentation/**'
      - '.editorconfig'
      - '*.runsettings'
      - '.gitattributes'
      - '.gitignore'
      - '*.md'
      - '.vscode/**'

jobs:
  Library_Build_And_Test:
    name: Build & Test (Library)
    runs-on: windows-latest
    # environment: qa
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.NET_SDK_VERSION }}

    - name: Restore Dependencies
      run: dotnet restore "${{ github.workspace }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj"

    - name: Build
      run: dotnet build "${{ github.workspace }}/${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj" -c ${{ env.BUILD_CONFIG }} --no-restore

    - name: Execute Unit Tests
      run: dotnet test "${{ github.workspace }}/Testing/${{ env.PROJECT_NAME }}Tests/${{ env.PROJECT_NAME }}Tests.csproj" -c ${{ env.BUILD_CONFIG }} --collect:"XPlat Code Coverage" --no-restore

    - name: Publish Code Coverage Results
      uses: codecov/codecov-action@v1.5.2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ${{ github.workspace }}/Testing/${{ env.PROJECT_NAME }}Tests/TestResults/**/coverage.cobertura.xml

    - name: Publish Build Artifacts
      uses: actions/upload-artifact@v2.2.3
      with:
        name: ${{ env.PROJECT_NAME }} Build Artifacts
        path: ${{ github.workspace }}/${{ env.PROJECT_NAME }}/bin/${{ env.BUILD_CONFIG }}/net${{ env.ARTIFACT_FOLDER_NAME }}
        error: There was an issue uploading the build artifact

  Build_And_Release_Testing_App:
    name: Build & Release (Testing App)
    runs-on: windows-latest
    # environment: qa
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.NET_SDK_VERSION }}

    - name: Restore Dependencies
      run: dotnet restore "${{ github.workspace }}/Testing/${{ env.PROJECT_NAME }}Testing/${{ env.PROJECT_NAME }}Testing.csproj"

    # - name: Build
    #   run: dotnet publish "${{ github.workspace }}/Testing/${{ env.PROJECT_NAME }}Testing/${{ env.PROJECT_NAME }}Testing.csproj" -c ${{ env.BUILD_CONFIG }} -o ./${{ env.RELEASE_NAME }}Release --no-restore

    - name: Build QA Version String
      uses: actions/github-script@v4
      id: qa-version
      with:
        script: |
          let commitHash = '${{ github.sha }}';
          let day = new Date().getDate();
          let month = new Date().getMonth();
          let year = new Date().getFullYear();
          let version = `${{ env.RELEASE_NAME }}.${year}.${month + 1}.${day}.${commitHash.slice(-5)}`;

          console.log(`QA Version: ${version}`);

          return version;
        result-encoding: string

    # - name: Zip Release
    #   run: Compress-Archive -Path "./${{ env.RELEASE_NAME }}Release" -DestinationPath "${{ github.workspace }}/${{ env.PROJECT_NAME }}-TestingApp-${{ steps.qa-version.outputs.result }}.zip"

    - name: Package Testing App
      run: |
        ${{ github.workspace }}/BuildScripts/PackageTestingApp.ps1 -Workspace "${{ github.workspace }}" `
          -ProjectName "${{ env.PROJECT_NAME }}" `
          -ReleaseName "${{ env.RELEASE_NAME }}" `
          -Version "${{ steps.qa-version.outputs.result }}"

    - name: Release Testing Application
      uses: softprops/action-gh-release@v0.1.8
      with:
        tag_name: ${{ steps.qa-version.outputs.result }}
        body: |
          ${{ env.PROJECT_NAME }} - ${{ env.RELEASE_NAME }} Release [${{ steps.qa-version.outputs.result }}](https://github.com/KinsonDigital/${{ env.PROJECT_NAME }}/tree/${{ steps.qa-version.outputs.result }})
          Execute the testing application in the **_${{ env.PROJECT_NAME }}-TestingApp-${{ steps.qa-version.outputs.result }}.zip_** file to perform manual testing.
        files: ${{ github.workspace }}/${{ env.PROJECT_NAME }}-TestingApp-${{ steps.qa-version.outputs.result }}.zip
        prerelease: true
